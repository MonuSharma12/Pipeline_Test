name: Run Java Selenium UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest  # You can also use 'windows-latest' or 'macos-latest' based on your needs
    
    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Step 2: Set up JDK (Java Development Kit)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'  # You can replace with your required version (e.g., 8, 11, or 17)
        distribution: 'adoptopenjdk'  # Choose your preferred distribution (e.g., OpenJDK, AdoptOpenJDK)
    
    # Step 3: Cache Maven dependencies (optional but speeds up builds)
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    # Step 4: Set up Maven (or Gradle if you're using that)
    - name: Set up Maven
      uses: actions/setup-java@v3
      with:
        maven-version: '3.8.1'
    
    # Step 5: Install dependencies
    - name: Install dependencies
      run: mvn install -DskipTests=true
    
    # Step 6: Run the Selenium UI Tests
    - name: Run Selenium Tests
      run: mvn test
      # If you want to specify a specific test class or suite:
      # run: mvn -Dtest=MySeleniumTestClass test
      # Or run tests in parallel, if you have testng:
      # run: mvn test -DsuiteXmlFile=testng.xml
    
    # Optional: Step 7 - Upload test reports (if generated by your tests)
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: selenium-test-results
        path: target/surefire-reports/  # Update the path if your reports are stored elsewhere
